{"mappings":"ACUA,sCAIA,qCAIA,iBAKA,wBAIA,qEAKA,+FAMA,iCAIA,+BAIA,6CCxCA,iCAOA","sources":["index.fd998cf6.css","css/styles.scss","css/_review-section.scss"],"sourcesContent":["body {\n  font-family: Open Sans, sans-serif;\n}\n\nh1, h2, h3 {\n  font-family: Lobster, cursive;\n}\n\nh2 {\n  color: #3046c5;\n}\n\nheader h2 {\n  color: #cec8ff;\n}\n\nfooter {\n  background-image: linear-gradient(#cec8ff, #fff);\n  padding: 20px 0;\n}\n\nheader {\n  color: #fff;\n  background-image: linear-gradient(to right, #5637dd, #3046c5, #60106b);\n  padding: 30px;\n}\n\n.navbar {\n  background-color: #901cad;\n}\n\n.carousel {\n  border: solid #5637dd;\n}\n\n.carousel-caption {\n  background-color: #00000080;\n}\n\n.review-section {\n  background: beige;\n}\n\n.campsite-btn {\n  background: #0dcaf0;\n  border-radius: .5rem;\n  justify-content: center;\n  align-items: center;\n  width: 60%;\n  padding: .5rem 1rem;\n  display: flex;\n}\n\n/*# sourceMappingURL=index.fd998cf6.css.map */\n","$color-primary: #3046C5;\n$color-secondary: #5637dd;\n$color-pale: #CEC8FF;\n$color-mid: #901CAD;\n$color-dark: #60106b;\n$color-black-transparent: rgba(0, 0, 0, 0.5);\n\n$body-font: \"Open Sans\", sans-serif;\n$header-font: \"Lobster\", cursive;\n\nbody {\n    font-family: $body-font;\n}\n\nh1, h2, h3 {\n    font-family: $header-font;\n}\n\nh2 {\n    color: $color-primary;\n}\n\nheader {\nh2     {\n    color: $color-pale;\n       }\n     }\nfooter {\n    background-image: linear-gradient($color-pale, white);\n    padding: 20px 0;\n}\n\nheader {\n    padding: 30px;\n    background-image: linear-gradient(to right, $color-secondary, $color-primary, $color-dark);\n    color: white;\n}\n\n.navbar {\n    background-color: $color-mid;\n}\n\n.carousel {\n    border: solid $color-secondary;\n}\n\n.carousel-caption {\n    background-color: $color-black-transparent;\n}\n\n@import 'review-section';","// Mixins allow you to create a function-like CSS to add multiple rulesets to one class. You can also extend from them to add variations for specific custom classes.\n@mixin review-section() {\n    background: beige;\n    // Add more CSS rules here if you'd like\n}\n\n.review-section {\n    // Add the review-section mixin\n    @include review-section;\n    // Add more CSS rules here if you'd like\n}\n\n// This is similar to a mixin but is more useful when creating custom CSS button components\n%campsite-btn {\n    background: #0dcaf0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n    width: 60%;\n}\n\n// We can extend from the %campsite-btn\n.campsite-btn {\n    @extend %campsite-btn;\n    // Add more CSS rules here if you'd like\n}"],"names":[],"version":3,"file":"index.fd998cf6.css.map"}